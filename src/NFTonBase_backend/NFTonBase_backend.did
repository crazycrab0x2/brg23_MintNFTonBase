type HttpHeader = record { value : text; name : text };
type HttpRequest = record {
  url : text;
  method : text;
  body : blob;
  headers : vec record { text; text };
};
type HttpResponse = record {
  body : blob;
  headers : vec record { text; text };
  status_code : nat16;
};
type HttpResponse_1 = record {
  status : nat;
  body : blob;
  headers : vec HttpHeader;
};
type TransformArgs = record { context : blob; response : HttpResponse_1 };
service : {
  get_base_eth_balance : (text) -> (float64, text);
  get_evm_address : (text) -> (text);
  get_system_address : () -> (text);
  get_usdc_balance : (text) -> (float64, text);
  http_request : (HttpRequest) -> (HttpResponse) query;
  mint_nft : (text, text, int32) -> (text);
  send_base_eth : (text, float64) -> (text, text);
  send_usdc : (text, float64, text) -> (text, text);
  transform : (TransformArgs) -> (HttpResponse_1) query;
  upload_data : (text, text) -> (text);
  upload_image : (text, blob) -> (text);
  whoami : () -> (text) query;
}
